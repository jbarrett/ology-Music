#!/usr/bin/env perl
use strict;
use warnings;

# Examples: http://techn.ology.net/algorithmic-ambient-audio/
#           https://youtu.be/Fpp5ScH_8OY - 20BPM audio rendering

use lib '/Users/gene/sandbox/MIDI-Util/lib';
use MIDI::Util;
use Music::Scales;

my $group   = shift || 1; # Groups of 3 bars
my $patches = shift || '4,16,69,70'; # See note below for good ones
my $name    = shift || 'pentatonic';
my $note    = shift || 'C'; # Bf, Cs, etc.
my $octave  = shift || 4;

# 9 possible 3 bar phrases
my $possibles = [           #   |   |   |   |  <- 3 measures
    [qw/ wn wr wr /],       # 0 ####.   .   .  <- Whole note
    [qw/ qr wn dhr wr /],   # 1 .####   .   .
    [qw/ hr wn hr wr /],    # 2 . ####  .   .
    [qw/ dhr wn qr wr /],   # 3 .  #### .   .
    [qw/ wr wn wr /],       # 4 .   ####.   .
    [qw/ wr qr wn dhr /],   # 5 .   .####   .
    [qw/ wr hr wn hr /],    # 6 .   . ####  .
    [qw/ wr dhr wn qr /],   # 7 .   .  #### .
    [qw/ wr wr wn /],       # 8 .   .   ####.
];

$patches = [ split /,/, $patches ];
die "Can't have more than 15 patches.\n"
    if @$patches > 15;

my @scale = get_scale_notes($note, $name);

my $score = MIDI::Util::setup_score(bpm => 100, octave => $octave);

my $channel = 0;

$score->synch( map { \&roll } 0 .. @$patches - 1 );

$score->n('wn', $scale[0]);

$score->write_score("$0.mid");

sub roll {
    MIDI::Util::set_chan_patch($score, $channel++, $patches->[$channel - 1]);

    for my $i (0 .. $group - 1) {
        my $roll = int rand @$possibles;
        print $channel, '. Adding roll #', $roll, "\n";

        for my $duration (@{ $possibles->[$roll] }) {
            my $trigger = substr $duration, length($duration) - 1, 1;
            if ($trigger eq 'n') {
                my $n = $scale[int rand @scale];
                print "\t$n\n";
                $score->n($duration, $n);
            }
            else {
                $duration =~ s/r/n/;
                $score->r($duration);
            }
        }
    }
}

__END__
# General MIDI patches that are audible and aren't horrible
my @patches = qw(
    0 1 2 4 5 7 8 9
    13 16 21 24 25 26
    32 34 35 40 42 60
    68 69 70 71 72 73
    74 79
);
