#!/usr/bin/env perl
use strict;
use warnings;

# Lookup stuff on spotify

# settings.yml example:
# oauth_client_id: abcdefghijklmnopqrstuvwxyz
# oauth_client_secret: 12345678901234567890

use Data::Dumper::Compact qw(ddc);
use Getopt::Long;
use WWW::Spotify;
use JSON::MaybeXS qw(decode_json);
use YAML::XS qw(LoadFile);

my %opts = (
    artist => undef,
    album  => undef,
    track  => undef,
    config => 'settings.yml',
    limit  => 10,
    max    => 100,
);
GetOptions( \%opts,
    'artist=s',
    'album=s',
    'track=s',
    'limit=i',
    'max=i',
);

die qq/Usage: perl $0 config="settings.yml" artist="Gene Boggs" album="X" track="Clubster"\n/
    unless $opts{artist} || $opts{album} || $opts{track};

my $cfg = YAML::XS::LoadFile($opts{config});

my $spotify = WWW::Spotify->new;
$spotify->oauth_client_id($cfg->{oauth_client_id});
$spotify->oauth_client_secret($cfg->{oauth_client_secret});
$spotify->force_client_auth(1);
$spotify->auto_json_decode(1);

my $key = $opts{track} ? 'track' : $opts{album} ? 'album' : 'artist';
my $keys = $key . 's';

my @query = ( $opts{artist}, 'artist' );
if ($keys eq 'tracks') {
    @query = ( $opts{track}, 'track' );
}
elsif ($keys eq 'albums') {
    @query = ( $opts{album}, 'album' );
}

my $limit = $opts{limit};
my $max   = $opts{max};
 
BATCH: for (my $i = 0; $i <= $max; $i += $limit) {
    my $step = $max - $i < $limit ? $max - $i + 1 : $limit;
    warn "offset=$i, limit=$step\n";

    my $result = $spotify->search(
        @query,
        { limit => $step, offset => $i }
    );
#warn __PACKAGE__,' L',__LINE__,' ',ddc($result, {max_width=>128});exit;
#warn __PACKAGE__,' L',__LINE__,' Batch: ',scalar($result->{$keys}{items}->@*),"\n";

    for my $item ($result->{$keys}{items}->@*) {
        if ($key eq 'artist' && $item->{name} eq $opts{artist}) {
#warn __PACKAGE__,' L',__LINE__,' ',ddc($item, {max_width=>128});
warn __PACKAGE__,' L',__LINE__,' Genres: ',join(', ', $item->{genres}->@*), "\n";
warn __PACKAGE__,' L',__LINE__,' Image: ',,"$item->{images}[1]{url}\n";
            last BATCH;
        }
        elsif ($item->{name} eq $opts{$key} && $item->{artists}[0]{name} eq $opts{artist}) {
#warn __PACKAGE__,' L',__LINE__,' ',ddc($item, {max_width=>128});
warn __PACKAGE__,' L',__LINE__,' Image: ',,"$item->{album}{images}[1]{url}\n";
            last BATCH;
        }
    }
}
