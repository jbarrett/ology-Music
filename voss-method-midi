#!/usr/bin/env perl
#
# "Musimathics" pg. 358 - Voss's Method
#
use strict;
use warnings;

use lib '/Users/gene/sandbox/MIDI-Util/lib';
use MIDI::Util;

my $max = shift || 16;

my @tnotes = qw( C5 Ds5 F5 G5 As5 C6 );
my @bnotes = qw( C3 F3 G3 C4 );

my $score = MIDI::Util::setup_score();

$score->synch( \&treble, \&bass );

$score->write_score("$0.mid");

sub treble {
    MIDI::Util::set_chan_patch( $score, 0, 0 );
    my @tseed = map { int rand @tnotes } 1 .. 4;
    for my $n ( 0 .. $max - 1 ) {
        my $note = $tnotes[ voss( $n, \@tseed ) ];
        $score->n( 'qn', $note );
    }
}

sub bass {
    MIDI::Util::set_chan_patch( $score, 1, 32 );
    my @bseed = map { int rand @bnotes } 1 .. 4;
    for my $n ( 0 .. ( $max / 2 ) - 1 ) {
        my $note = $bnotes[ voss( $n, \@bseed ) ];
        $score->n( 'hn', $note );
    }
}

sub voss {
    my ( $i, $list ) = @_;

    my $sum = 0;

    for my $k ( 0 .. @$list - 1 ) {
        if ( ( $i % ( 2 ** $k ) ) == 0 ) {
            $list->[$k] = int rand 2;
        }
        $sum += $list->[$k];
    }

    return $sum;
}
