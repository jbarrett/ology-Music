package MyPitch;
use Moo;
with 'Music::PitchNum';

package main;
use strict;
use warnings;

use Data::Dumper::Compact qw(ddc);
use Music::NeoRiemannianTonnetz ();
use Music::Chord::Note ();

my $note      = shift || 'C';
my $octave    = shift || '4';
my $transform = shift || 'P,R,L';

$transform = [ split /,/, $transform ];

my $nrt = Music::NeoRiemannianTonnetz->new;

my $cn = Music::Chord::Note->new;
my @chord = $cn->chord_with_octave($note, $octave);

my $p = MyPitch->new;
my @pitches = map { $p->pitchnum($_) } @chord;
my $notes = \@pitches;
print "1. ", ddc($notes), '   ', ddc(\@chord);

my $i = 1;

for my $t (@$transform) {
    $i++;
    my $transformed = $nrt->transform($t, $notes);
    my @notes = map { $p->pitchname($_) } @$transformed;
    print "$i. ", ddc($transformed), '   ', ddc(\@notes);
    $notes = $transformed;
}
