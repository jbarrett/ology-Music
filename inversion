#!/usr/bin/perl
#
# Program: Chord-Perversions
# Copyright 2011 gene@ology.net
#
# This program names all musical chord permutations given a set of notes.
# The lists generated are not musical inversions but rather mathematical
# perversions of chords.
#
use strict;
use warnings;

# Load handy modules.
use Math::Combinatorics;
use Music::Chord::Namer qw(chordname);

# Get a list of notes from the command-line or use a Cmaj triad.
my @n = @ARGV ? map { ucfirst } @ARGV : qw(C E G);

# Get a list of all possible permutations.
my @p = permute(@n);

# The chord-name x permutation dictionaries.
my %x = ();
my %y = ();

# Traverse each permutation.
for my $i (@p) {
    # Get the chord name for the permutation.
    for my $c (chordname(@$i)) {
        # Make a chord-name to permutation table.
        push @{$x{$c}}, "@$i";
        # Make a permutation to chord-name table.
        push @{$y{"@$i"}}, $c;
    }
}

# Curiosity may or may not have killed Schrodinger's cat.
use Data::Dumper;
# Show chord-name to permutations.
warn Data::Dumper->new([\%x])->Indent(1)->Terse(1)->Quotekeys(0)->Sortkeys(1)->Dump;
# Show permutation to chord-names.
warn Data::Dumper->new([\%y])->Indent(1)->Terse(1)->Quotekeys(0)->Sortkeys(1)->Dump;

__END__
In vi exec:
:!perl % c\# e gb|less
