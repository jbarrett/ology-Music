#!/usr/bin/env perl
use strict;
use warnings;

use Math::Curve::Hilbert;
use MIDIUtil;
use Music::Scales;

my $max = shift || 64;
my $bpm = shift || 120;

my $score = MIDIUtil::setup_midi( bpm => $bpm );

my $hilbert = Math::Curve::Hilbert->new(
    direction => 'up',
    max       => 8,
    clockwise => 1,
    step      => 4,
);

my $treb  = 60;
my $bass  = 48;
my $count = 0;

my @c_notes = qw(  0 12 24 36 48 60 72 84  96 108 120 );
my @e_notes = qw(  4 16 28 40 52 64 76 88 100 112 124 );
my @f_notes = qw(  5 17 29 41 53 65 77 89 101 113 125 );
my @b_notes = qw( 11 23 35 47 59 71 83 95 107 119 );

# Start the Hilbert curve
my ( $x1, $y1 ) = $hilbert->CoordinatesFromPoint( $count++ );

# Draw the Hilbert curve
while ( ( $hilbert->CoordinatesFromPoint($count) )[0] ) {
    $score->n( 'qn', $treb, $bass );

    # Get a new point on the curve
    my ( $x2, $y2 ) = $hilbert->CoordinatesFromPoint( $count++ );

    # Inc/Decrement the treble note
    if ( $x2 - $x1 > 0 ) {
        if ( ( grep { $treb == $_ } @e_notes ) || ( grep { $treb == $_ } @b_notes ) ) {
            $treb += 1;
        }
        else {
            $treb += 2;
        }
    }
    elsif ( $x2 - $x1 < 0 ) {
        if ( ( grep { $treb == $_ } @c_notes ) || ( grep { $treb == $_ } @f_notes ) ) {
            $treb -= 1;
        }
        else {
            $treb -= 2;
        }
    }

    # Inc/Decrement the bass note
    if ( $y2 - $y1 > 0 ) {
        if ( ( grep { $bass == $_ } @e_notes ) || ( grep { $bass == $_ } @b_notes ) ) {
            $bass += 1;
        }
        else {
            $bass += 2;
        }
    }
    elsif ( $y2 - $y1 < 0 ) {
        if ( ( grep { $bass == $_ } @c_notes ) || ( grep { $bass == $_ } @f_notes ) ) {
            $bass -= 1;
        }
        else {
            $bass -= 2;
        }
    }

    # Increment the line segment
    ( $x1, $y1 ) = ( $x2, $y2 );

    # End the loop if we have reached the maximum
    last if $count > $max;
}

$score->write_score("$0.mid");
