#!/usr/bin/env perl
use strict;
use warnings;

use Math::Curve::Hilbert;
use lib '/Users/gene/sandbox/MIDI-Util/lib';
use MIDI::Util;
use lib '/Users/gene/sandbox/Music-ScaleNote/lib';
use Music::ScaleNote;
use Music::Note;

my $max     = shift || 64;
my $bpm     = shift || 120;
my $t_scale = shift || 'dorian';
my $b_scale = shift || 'pminor';

my $score = MIDI::Util::setup_score( bpm => $bpm );

my $format = 'midinum';

my $treb = 60;
my $bass = 48;

my $t_note = Music::Note->new( $treb, $format );
my $b_note = Music::Note->new( $bass, $format );

my $t_msn = Music::ScaleNote->new(
    scale_note  => $t_note->format('isobase'),
    scale_name  => $t_scale,
    note_format => $format,
#    verbose     => 1,
);

my $b_msn = Music::ScaleNote->new(
    scale_note  => $b_note->format('isobase'),
    scale_name  => $b_scale,
    note_format => $format,
#    verbose     => 1,
);

my $hilbert = Math::Curve::Hilbert->new(
    direction => 'up',
    max       => 8,
    clockwise => 1,
    step      => 4,
);

my $count = 0;

# Start the Hilbert curve
my ( $x1, $y1 ) = $hilbert->CoordinatesFromPoint( $count++ );

# Draw the Hilbert curve
while ( ( $hilbert->CoordinatesFromPoint($count) )[0] ) {
    $score->n( 'qn', $treb, $bass );

    # Get a new point on the curve
    my ( $x2, $y2 ) = $hilbert->CoordinatesFromPoint( $count++ );

    # Inc/Decrement the treble note
    my $offset = 0;
    if ( $x2 - $x1 > 0 ) {
        $offset = 1;
    }
    elsif ( $x2 - $x1 < 0 ) {
        $offset = -1;
    }
    $treb = $t_msn->get_offset(
        note_name => $treb,
        offset    => $offset,
    )->format($format);

    # Inc/Decrement the bass note
    $offset = 0;
    if ( $y2 - $y1 > 0 ) {
        $offset = 1;
    }
    elsif ( $y2 - $y1 < 0 ) {
        $offset = -1;
    }
    $bass = $b_msn->get_offset(
        note_name => $bass,
        offset    => $offset,
    )->format($format);

    # Increment the line segment
    ( $x1, $y1 ) = ( $x2, $y2 );

    # End the loop if we have reached the maximum
    last if $count > $max;
}

$score->write_score("$0.mid");
