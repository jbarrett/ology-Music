0,
    );
    for my $beat ( 1 .. $d->bars ) {
        $d->note( $d->EIGHTH, $d->backbeat_rhythm( -beat => $beat ) );
        if ( $beat == 3 ) {
            $d->note( $d->EIGHTH, $d->kick );
        }
        else {
            $d->rest( $d->EIGHTH );
        }
    }
}

sub collect_notes {
    my ( $n, $initial, $pitch, $velocity, $duration ) = @_;

    my $p_vertex = $initial;
    my $v_vertex = 0;
    my $d_vertex = 0;

    my $notes = [];

    for my $i ( 1 .. $n ) {
        my $p = $pitch->get_vertex_attribute( $p_vertex, 'label' );
        my $v = $velocity->get_vertex_attribute( $v_vertex, 'label' );
        my $d = $duration->get_vertex_attribute( $v_vertex, 'label' );

        push @$notes, [ $d, $v, $p ];

        if ( $i < $n ) {
            $p_vertex = next_vertex( $pitch, $p_vertex );
            $v_vertex = next_vertex( $velocity, $v_vertex );
            $d_vertex = next_vertex( $duration, $d_vertex );
        }
    }

    return @$notes;
}

sub next_vertex {
    my ( $graph, $vertex ) = @_;

    my $successors = [];

    for my $successor ( $graph->successors($vertex) ) {
        push @$successors, {
            vertex => $successor,
            weight => $graph->get_cost( [ $vertex, $successor ] ),
        };
    }

    my $choice = choose_weighted( $successors, sub { $_[0]->{weight} } );

    return $choice->{vertex};
}
