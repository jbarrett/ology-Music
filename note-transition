#!/usr/bin/env perl
use strict;
use warnings;

use Data::Dumper;
use MIDI;
use Statistics::Frequency;
use Storable;

my $file  = shift || die "Usage: perl $0 tune.mid\n";
my $notes = shift || 1;

my $opus = MIDI::Opus->new({ from_file => $file });

my $track = [ $opus->tracks ]->[0];

my @events = grep { $_->[0] eq 'note_on' } $track->events;

my $transitions = {};
my @last;

for my $event ( @events ) {
    next unless $event->[2] == 0; # Skip all but channel 0
#warn "@$event\n";

    if ( @last == $notes ) {
        my $next = $event->[3]; # The next note in succession
        push @{ $transitions->{ join ' ', @last } }, $next;
warn "Datum: @last -> $next\n";
        shift @last;
        push @last, $next;
    }
    else {
        push @last, $event->[3]; # The note value
    }
}
warn 'Note transitions: ', Dumper$transitions;

my $frequencies = {};

my $stat = Statistics::Frequency->new;

for my $note ( keys %$transitions ) {
    $stat->add_data( @{ $transitions->{$note} } );
    $frequencies->{$note} = { $stat->proportional_frequencies };
    $stat->clear_data;
}
warn 'Transition frequencies: ', Dumper$frequencies;

store $frequencies, "$0.dat";
