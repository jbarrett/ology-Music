#!/usr/bin/env perl
use strict;
use warnings;

##
# Musical dice game, attributed to Mozart
# 16 measures x 11 dice sums (2-12) = 176 2D-grid of 3/8 measures
##

use lib map { "$ENV{HOME}/sandbox/$_/lib" } qw(MIDI-Util);
use MIDI::Util qw(setup_score set_chan_patch);

my $max    = shift || 16; # Number of measures to produce
my $bpm    = shift || 90; # Beats per minute
my $tpatch = shift || 4;  # Treble
my $bpatch = shift || 35; # Bass

# Declare the available measures
my $total_bars = 8;
my @barst = map { my $sub = 'bart' . $_; \&$sub } 1 .. $total_bars;
my @barsb = map { my $sub = 'barb' . $_; \&$sub } 1 .. $total_bars;

# Setup the MIDI score
my $score = setup_score(bpm => $bpm);

# Choose the measures to play
# * Technically, this should be the sum of two dice...
my @choices = map { int rand @barst } 1 .. $max;

# Define the procedures to actually play the chosen measures
my $tproc = sub {
    set_chan_patch($score, 0, $tpatch);
    $barst[$_]->() for @choices;
};
my $bproc = sub {
    set_chan_patch($score, 1, $bpatch);
    $barsb[$_]->()for @choices;
};

# Mash the phrases together as MIDI tracks
$score->synch($tproc, $bproc);

# Write the score to a MIDI file
$score->write_score("$0.mid");

# Available measures:

sub bart1 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en F5));
    $score->n(qw(en D5));
    $score->n(qw(en G5));
}
sub barb1 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en F3));
    $score->n(qw(en D3));
    $score->n(qw(en G3));
}
sub bart2 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en A4));
    $score->n(qw(sn Fs4));
    $score->n(qw(sn G4));
    $score->n(qw(sn B4));
    $score->n(qw(sn G5));
}
sub barb2 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn B2 G3));
    $score->r(qw(en));
}
sub bart3 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en G5));
    $score->n(qw(en C5));
    $score->n(qw(en E5));
}
sub barb3 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 E3));
    $score->r(qw(en));
}
sub bart4 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en G5));
    $score->n(qw(qn D5));
}
sub barb4 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn G2));
    $score->n(qw(sn B2));
    $score->n(qw(en G3));
    $score->n(qw(en B2));
}
sub bart5 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn G5 D5 B4 G4));
    $score->r(qw(en));
}
sub barb5 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en G2));
    $score->n(qw(sn B3 G3));
    $score->n(qw(sn G3 F3));
    $score->n(qw(sn Fs3 E3));
    $score->n(qw(sn E3 D3));
}
sub bart6 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en G4));
    $score->n(qw(en C5));
    $score->n(qw(en E5));
}
sub barb6 {
    barb3();
}
sub bart7 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn E5));
    $score->n(qw(sn C5));
    $score->n(qw(sn E5));
    $score->n(qw(sn G5));
    $score->n(qw(sn C6));
    $score->n(qw(sn G5));
}
sub barb7 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 G3));
    $score->r(qw(en));
}
sub bart8 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C5));
    $score->r(qw(en));
}
sub barb8 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en C3));
    $score->n(qw(en G2));
    $score->n(qw(en C2));
}
sub bart9 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en E5 C5));
    $score->n(qw(en B4 D5));
    $score->r(qw(en));
}
sub barb9 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn G3));
    $score->n(qw(en G2));
}
sub bart10 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn B4));
    $score->n(qw(sn A4));
    $score->n(qw(sn B4));
    $score->n(qw(sn C5));
    $score->n(qw(sn D5));
    $score->n(qw(sn B4));
}
sub barb10 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn G3));
    $score->r(qw(en));
}
sub bart11 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn E5));
    $score->n(qw(sn C5));
    $score->n(qw(sn B4));
    $score->n(qw(sn A4));
    $score->n(qw(sn G4));
    $score->n(qw(sn Fs4));
}
sub barb11 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en C3));
    $score->n(qw(en D3));
    $score->n(qw(en D2));
}
sub bart12 {
    print '', (caller(0))[3], "\n";
    for (1 .. 3) {
        $score->n(qw(en C5 E4));
    }
}
sub barb12 {
    print '', (caller(0))[3], "\n";
    for (1 .. 3) {
        $score->n(qw(en C3));
    }
}
sub bart13 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en C5));
    $score->n(qw(en G4));
    $score->n(qw(en E4));
}
sub barb13 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn E3 G3));
    $score->r(qw(en));
}
sub bart14 {
    bart8();
}
sub barb14 {
    barb8();
}
sub bart15 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en E5));
    $score->n(qw(sn G5));
    $score->n(qw(sn E5));
    $score->n(qw(en C5));
}
sub barb15 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 G3));
    $score->n(qw(en C3 E3));
}
sub bart16 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(en A5));
    $score->n(qw(en Fs5));
    $score->n(qw(en D5));
}
sub barb16 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn Fs3 D3));
    $score->n(qw(en C3 Fs3));
}
sub bart17 {
    print '', (caller(0))[3], "\n";
}
sub barb17 {
    barb13();
}
sub bart18 {
    print '', (caller(0))[3], "\n";
}
sub barb18 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 E3));
    $score->n(qw(en C3 G3));
}
sub bart19 {
    print '', (caller(0))[3], "\n";
}
sub barb19 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 G3));
    $score->n(qw(en C3 E3));
}
sub bart20 {
    print '', (caller(0))[3], "\n";
}
sub barb20 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn D3));
    $score->r(qw(en));
}
sub bart21 {
    print '', (caller(0))[3], "\n";
}
sub barb21 {
    barb11();
}
sub bart22 {
    print '', (caller(0))[3], "\n";
}
sub barb22 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3));
    $score->r(qw(en));
}
sub bart23 {
    print '', (caller(0))[3], "\n";
}
sub barb23 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn F3));
    $score->n(qw(sn E3));
    $score->n(qw(sn D3));
    $score->n(qw(sn E3));
    $score->n(qw(sn F3));
    $score->n(qw(sn G3));
}
sub bart24 {
    bart5();
}
sub barb24 {
    barb5();
}
sub bart25 {
    print '', (caller(0))[3], "\n";
}
sub barb25 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn D3));
    $score->n(qw(en C3));
}
sub bart26 {
    print '', (caller(0))[3], "\n";
}
sub barb26 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn C3));
    $score->n(qw(sn E3));
    $score->n(qw(sn G3));
    $score->n(qw(sn E3));
    $score->n(qw(sn C4));
    $score->n(qw(sn C3));
}
sub bart27 {
    print '', (caller(0))[3], "\n";
}
sub barb27 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn G3 B3));
    $score->r(qw(en));
}
sub bart28 {
    print '', (caller(0))[3], "\n";
}
sub barb28 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 A3));
    $score->r(qw(en));
}
sub bart29 {
    print '', (caller(0))[3], "\n";
}
sub barb29 {
    barb9();
}
sub bart30 {
    bart5();
}
sub barb30 {
    barb5();
}
sub bart31 {
    print '', (caller(0))[3], "\n";
}
sub barb31 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn C3 G3));
    $score->n(qw(en C3 G3));
}
sub bart32 {
    print '', (caller(0))[3], "\n";
}
sub barb32 {
    barb6();
}
sub bart33 {
    bart5();
}
sub barb33 {
    barb5();
}
sub bart34 {
    print '', (caller(0))[3], "\n";
}
sub barb34 {
    barb10();
}
sub bart35 {
    print '', (caller(0))[3], "\n";
}
sub barb35 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn Fs3 D3));
    $score->n(qw(en C3 A3));
}
sub bart36 {
    print '', (caller(0))[3], "\n";
}
sub barb36 {
    barb11();
}
sub bart37 {
    print '', (caller(0))[3], "\n";
}
sub barb37 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn B3 D3));
    $score->r(qw(en));
}
sub bart38 {
    print '', (caller(0))[3], "\n";
}
sub barb38 {
    print '', (caller(0))[3], "\n";
    for (1 .. 3) {
        $score->n(qw(sn C3 E3));
        $score->n(qw(sn G3));
    }
}
sub bart39 {
    print '', (caller(0))[3], "\n";
}
sub barb39 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(sn B2));
    $score->n(qw(sn D3));
    $score->n(qw(sn G3));
    $score->n(qw(sn D3));
    $score->n(qw(sn B2));
    $score->n(qw(sn G2));
}
sub bart40 {
    print '', (caller(0))[3], "\n";
}
sub barb40 {
    barb6();
}
sub bart41 {
    print '', (caller(0))[3], "\n";
}
sub barb41 {
    barb6();
}
sub bart42 {
    print '', (caller(0))[3], "\n";
}
sub barb42 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn A2));
    $score->r(qw(en));
}
sub bart43 {
    print '', (caller(0))[3], "\n";
}
sub barb43 {
    barb6();
}
sub bart44 {
    print '', (caller(0))[3], "\n";
}
sub barb44 {
    print '', (caller(0))[3], "\n";
    $score->n(qw(qn F3));
    $score->n(qw(en G3));
}
sub bart45 {
    print '', (caller(0))[3], "\n";
}
sub barb45 {
    barb13();
}
sub bart46 {
    print '', (caller(0))[3], "\n";
}
sub barb46 {
    barb37();
}
sub bart47 {
    print '', (caller(0))[3], "\n";
}
sub barb47 {
    barb37();
}
sub bart48 {
    print '', (caller(0))[3], "\n";
}
sub barb48 {
    barb19();
}
