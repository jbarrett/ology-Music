#!/usr/bin/env perl
use strict;
use warnings;

use MIDI::Simple;
use Math::Combinatorics;
use List::Util qw( shuffle );

my $max = defined $ARGV[0] ? shift : 16;  # Maximum notes to play

my @treb_notes = qw( C5 D5 Ds5 As4 ); # Sharp = Cs, Ds, etc
my @treb_dura  = qw( en qn qn qn );   # Also: sn, dsn, ddsn, tsn, etc
my @treb_velo  = qw( mezzo mezzo mf f ); # Also: ppp pp p mp mezzo mf f ff fff
my @bass_notes = qw( C3 F3 G3 C3 );
my @bass_dura  = qw( qn qn qn qn );
my @bass_velo  = qw( f f f f );

my @treb_combos      = shuffle permute(@treb_notes);
my @treb_dura_combos = shuffle permute(@treb_dura);
my @treb_velo_combos = shuffle permute(@treb_velo);
my @bass_combos      = shuffle permute(@bass_notes);
my @bass_dura_combos = shuffle permute(@bass_dura);
my @bass_velo_combos = shuffle permute(@bass_velo);

my $score = setup_midi(
    lead_in => scalar(@treb_notes),
    channel => 1,
    patch   => 0,
    volume  => 120,
);

my $n = 0;

for my $i ( 0 .. @treb_combos - 1 ) {
    for my $j ( 0 .. @{ $treb_combos[$i] } - 1 ) {
        $n++;
        last if $max && $n > $max;

        if ( $treb_dura_combos[$i][$j] eq $bass_dura_combos[$i][$j] ) {
            $score->n(
                $treb_velo_combos[$i][$j],
                $treb_dura_combos[$i][$j],
                $treb_combos[$i][$j],
                $bass_combos[$i][$j]
            );
        }
        else {
            $score->n(
                $treb_velo_combos[$i][$j],
                $treb_dura_combos[$i][$j],
                $treb_combos[$i][$j]
            );
            $score->n(
                $bass_velo_combos[$i][$j],
                $bass_dura_combos[$i][$j],
                $bass_combos[$i][$j]
            );
        }
    }

    last if $max && $n > $max;
}

$score->write_score( $0 . '.mid' );

sub setup_midi {
    my %args = @_;
    my $score = MIDI::Simple->new_score();
    $score->Volume($args{volume});
    # Lead-in
    $score->Channel(9);
    $score->n( 'qn', 42 ) for 1 .. $args{lead_in};
    # Passage
    $score->Channel($args{channel});
    $score->patch_change( $args{channel}, $args{patch} );
    return $score;
}
