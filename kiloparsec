#!/usr/bin/env perl

# 

use strict;
use warnings;

use lib '/Users/gene/sandbox/MIDI-Util/lib';
use MIDI::Util;
use Music::Scales;
use Music::Voss qw/ powers /;

my $max = shift || 64;
my $bpm = shift || 20;

my $quarter = 'qn';
my $triplet = 'tqn';
my $half    = 'hn';
my $whole   = 'wn';

my $scale_note           = 'C';
my $alto_scale_name      = 'major';
my $tenor_scale_name     = 'pentatonic';
my $barritone_scale_name = 'pentatonic';

my $alto_patch      = 69;
my $tenor_patch     = 0;
my $barritone_patch = 42;

my @alto_scale      = map { $_ . 5 } get_scale_notes( $scale_note, $alto_scale_name );
my @tenor_scale     = map { $_ . 4 } get_scale_notes( $scale_note, $tenor_scale_name );
my @barritone_scale = map { $_ . 3 } get_scale_notes( $scale_note, $barritone_scale_name );

my $alto_seed      = [ map { sub { int rand 2 } } @alto_scale ];
my $tenor_seed     = [ map { sub { int rand 2 } } @tenor_scale ];
my $barritone_seed = [ map { sub { int rand 2 } } @barritone_scale ];

my $alto_genf      = powers( calls => $alto_seed );
my $tenor_genf     = powers( calls => $tenor_seed );
my $barritone_genf = powers( calls => $barritone_seed );

my $score = MIDI::Util::setup_score( lead_in => 0, bpm => $bpm );

$score->synch(
    \&alto,
    \&tenor,
    \&barritone,
);

$score->write_score("$0.mid");

sub alto {
    MIDI::Util::set_chan_patch( $score, 0, $alto_patch );

    my $i = 1;

    for my $n ( 0 .. $max - 1 ) {
        if ( $n % 4 == 0 ) {
            if ( $i % 3 == 0 ) {
                my $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $quarter, $note );

                $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $quarter, $note );

                $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $quarter, $note );

                $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $quarter, $note );
            }
            else {
                my $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $triplet, $note );

                $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $triplet, $note );

                $note = $alto_scale[ $alto_genf->($n) ];
                $score->n( $triplet, $note );
            }

            $i++;

            $score->r($half);
        }
        else {
            $score->r($whole);
        }
    }
}

sub tenor {
    MIDI::Util::set_chan_patch( $score, 1, $tenor_patch );

    for my $n ( 0 .. $max - 1 ) {
        if ( $n < 8 ) {
            $score->r($whole);
        }
        else {
            my $note = $tenor_scale[ $tenor_genf->($n) ];
            $score->n( $half, $note );

            if ( $n % 3 == 0 ) {
                $note = $tenor_scale[ $tenor_genf->($n) ];
                $score->n( $half, $note );
            }
            else {
                $score->r($half);
            }
        }
    }

    $score->n( $whole, $tenor_scale[0] );
}

sub barritone {
    MIDI::Util::set_chan_patch( $score, 2, $barritone_patch );

    for my $n ( 0 .. $max - 1 ) {
        my $note = $barritone_scale[ $barritone_genf->($n) ];
        $score->n( $whole, $note );
    }

    $score->n( $whole, $barritone_scale[0] );
}
