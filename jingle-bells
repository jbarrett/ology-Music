#!/usr/bin/env perl
use strict;
use warnings;

use lib map { "$ENV{HOME}/sandbox/$_/lib" } qw(MIDI-Util Music-MelodicDevice-Ornamentation);
use MIDI::Util qw(setup_score);

my $score = setup_score(bpm => 140);

my @notes = qw(
    qn.E4 qn.E4 hn.E4
    qn.E4 qn.E4 hn.E4
    qn.E4 qn.G4 qn.C4 qn.D4
    wn.E4

    qn.F4 qn.F4 qn.F4 qn.F4
    qn.F4 qn.E4 qn.E4 qn.E4
    qn.E4 qn.D4 qn.D4 qn.E4
    hn.D4       hn.G4

    qn.E4 qn.E4 hn.E4
    qn.E4 qn.E4 hn.E4
    qn.E4 qn.G4 qn.C4 qn.D4
    wn.E4

    qn.F4 qn.F4 qn.F4 qn.F4
    qn.F4 qn.E4 qn.E4 qn.E4
    qn.G4 qn.G4 qn.F4 qn.D4
    wn.C4
);

for my $note (@notes) {
    my @note = split /\./, $note;
    $score->n(@note);
}

use Music::MelodicDevice::Ornamentation;
my $ornament = Music::MelodicDevice::Ornamentation->new(
    scale_note => 'C',
    scale_name => 'major',
#    verbose => 1,
);

my $n = 0;
for my $note (@notes) {
    my @note = split /\./, $note;
    my $spec;

    if ($n == 1) {
        $spec = $ornament->grace_note(@note, -1);
    }
    elsif ($n == 2) {
        $spec = $ornament->mordent(@note, 1);
    }
    elsif ($n == 6) {
        $spec = $ornament->trill(@note, 2, 1);
    }
    elsif ($n == 10) {
        $spec = $ornament->turn(@note, 1);
    }

    if ($spec) {
        $spec = [ map { [ @$_ ] } @$spec ];
        $score->n(@$_) for @$spec;
    }
    else {
        $score->n(@note);
    }

    $n = $n == 12 ? 0 : $n + 1;
}

$score->write_score("$0.mid");
